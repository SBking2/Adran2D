<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <PropertyGroup>
    <ResolveNugetPackages>false</ResolveNugetPackages>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{8D3A50D9-CC17-3CC2-9CEF-A90A9274391F}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>ZERO_CHECK</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\include;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build;D:\MyCode\C++\Adran\Adran\vendor\assimp\include;D:\MyCode\C++\Adran\Adran\vendor\assimp\code;D:\MyCode\C++\Adran\Adran\vendor\assimp\.;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\contrib\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\include;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build;D:\MyCode\C++\Adran\Adran\vendor\assimp\include;D:\MyCode\C++\Adran\Adran\vendor\assimp\code;D:\MyCode\C++\Adran\Adran\vendor\assimp\.;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\contrib\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\include;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build;D:\MyCode\C++\Adran\Adran\vendor\assimp\include;D:\MyCode\C++\Adran\Adran\vendor\assimp\code;D:\MyCode\C++\Adran\Adran\vendor\assimp\.;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\contrib\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\include;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build;D:\MyCode\C++\Adran\Adran\vendor\assimp\include;D:\MyCode\C++\Adran\Adran\vendor\assimp\code;D:\MyCode\C++\Adran\Adran\vendor\assimp\.;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\contrib\zlib;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\1bb661871dec9fa80478e48044b4a596\generate.stamp.rule">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\MyCode\C++\CMake\bin\cmake.exe -SD:/MyCode/C++/Adran/Adran/vendor/assimp -BD:/MyCode/C++/Adran/Adran/vendor/assimp/Build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/MyCode/C++/Adran/Adran/vendor/assimp/Build/Assimp.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeCCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeCXXCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeRCCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeSystem.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\assimp.pc.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\FindPkgMacros.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\PrecompiledHeader.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\assimp-plain-config.cmake.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\cmake_uninstall.cmake.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\code\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\zconf.h.cmakein;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\zlib.pc.cmakein;D:\MyCode\C++\Adran\Adran\vendor\assimp\include\assimp\config.h.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\revision.h.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\test\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\test\headercheck\CMakeLists.txt;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckFunctionExists.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckIncludeFileCXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckTypeSize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\contrib\zlib\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\code\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\test\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\test\headercheck\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\MyCode\C++\CMake\bin\cmake.exe -SD:/MyCode/C++/Adran/Adran/vendor/assimp -BD:/MyCode/C++/Adran/Adran/vendor/assimp/Build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/MyCode/C++/Adran/Adran/vendor/assimp/Build/Assimp.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeCCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeCXXCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeRCCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeSystem.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\assimp.pc.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\FindPkgMacros.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\PrecompiledHeader.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\assimp-plain-config.cmake.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\cmake_uninstall.cmake.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\code\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\zconf.h.cmakein;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\zlib.pc.cmakein;D:\MyCode\C++\Adran\Adran\vendor\assimp\include\assimp\config.h.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\revision.h.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\test\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\test\headercheck\CMakeLists.txt;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckFunctionExists.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckIncludeFileCXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckTypeSize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\contrib\zlib\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\code\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\test\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\test\headercheck\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\MyCode\C++\CMake\bin\cmake.exe -SD:/MyCode/C++/Adran/Adran/vendor/assimp -BD:/MyCode/C++/Adran/Adran/vendor/assimp/Build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/MyCode/C++/Adran/Adran/vendor/assimp/Build/Assimp.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeCCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeCXXCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeRCCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeSystem.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\assimp.pc.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\FindPkgMacros.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\PrecompiledHeader.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\assimp-plain-config.cmake.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\cmake_uninstall.cmake.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\code\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\zconf.h.cmakein;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\zlib.pc.cmakein;D:\MyCode\C++\Adran\Adran\vendor\assimp\include\assimp\config.h.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\revision.h.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\test\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\test\headercheck\CMakeLists.txt;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckFunctionExists.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckIncludeFileCXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckTypeSize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\contrib\zlib\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\code\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\test\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\test\headercheck\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <BuildInParallel Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</BuildInParallel>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Checking Build System</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\MyCode\C++\CMake\bin\cmake.exe -SD:/MyCode/C++/Adran/Adran/vendor/assimp -BD:/MyCode/C++/Adran/Adran/vendor/assimp/Build --check-stamp-list CMakeFiles/generate.stamp.list --vs-solution-file D:/MyCode/C++/Adran/Adran/vendor/assimp/Build/Assimp.sln
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeCCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeCXXCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeRCCompiler.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\3.29.0-rc3\CMakeSystem.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\assimp.pc.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\FindPkgMacros.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\PrecompiledHeader.cmake;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\assimp-plain-config.cmake.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\cmake-modules\cmake_uninstall.cmake.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\code\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\zconf.h.cmakein;D:\MyCode\C++\Adran\Adran\vendor\assimp\contrib\zlib\zlib.pc.cmakein;D:\MyCode\C++\Adran\Adran\vendor\assimp\include\assimp\config.h.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\revision.h.in;D:\MyCode\C++\Adran\Adran\vendor\assimp\test\CMakeLists.txt;D:\MyCode\C++\Adran\Adran\vendor\assimp\test\headercheck\CMakeLists.txt;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\BasicConfigVersion-SameMajorVersion.cmake.in;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCXXInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeCommonLanguageInclude.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeGenericSystem.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeInitializeConfigs.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeLanguageInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakePackageConfigHelpers.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeRCInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInformation.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CMakeSystemSpecificInitialize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckCSourceCompiles.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckFunctionExists.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckIncludeFile.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckIncludeFileCXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\CheckTypeSize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC-C.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC-CXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Compiler\MSVC.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Internal\CheckSourceCompiles.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-Initialize.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-C.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC-CXX.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows-MSVC.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\Windows.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\Platform\WindowsPaths.cmake;D:\MyCode\C++\CMake\share\cmake-3.29\Modules\WriteBasicConfigVersionFile.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\contrib\zlib\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\code\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\test\CMakeFiles\generate.stamp;D:\MyCode\C++\Adran\Adran\vendor\assimp\Build\test\headercheck\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>